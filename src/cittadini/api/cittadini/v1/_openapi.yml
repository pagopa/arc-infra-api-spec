openapi: 3.0.1
info:
  title: pagopa-arc-be
  description: Api and Models
  version: 0.0.1
servers:
  - url: 'https://${hostname}/arc/v1'
paths:
  /login/oneidentity:
    get:
      tags:
        - arc auth
      summary: "Provide the authentication endpoint"
      operationId: getAuthenticationEndpoint
      responses:
        '302':
          description: "Redirect to the authentication endpoint"
          headers:
            Location:
              description: >
                The URL to redirect to, including the following query parameters:
                - response_type: The type of response, e.g., "code".
                - scope: The scope of the access request, e.g., "openid profile email".
                - client_id: The client ID, e.g., "abc4hdRkqt3".
                - state: An opaque value used to maintain state between the request and callback, e.g., "abc4hdRkqt3".
                - redirect_uri: The URI to redirect to after authorization, e.g., "https://client.example.org/cb".
              schema:
                type: string
        '401':
          description: "Wrong or missing function key"
        '429':
          description: "Too many Requests"
        '500':
          description: "Service unavailable"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /transactions:
    get:
      tags:
        - arc transactions
      summary: Retrieve the paged transaction list from arc
      operationId: getTransactionsList
      parameters:
        - name: page
          in: query
          description: Number of page required
          required: false
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Number of items for page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: filter
          in: query
          description: The field passed to filter the list of transactions
          required: false
          schema:
            type: string
            enum: [paidByMe, registeredToMe]
          example: paidByMe
      responses:
        '200':
          description: Obtained transaction list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsListDTO'
        '401':
          description: Wrong or missing function key
        '429':
          description: Too many Requests
        '500':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /transactions/{transactionId}:
    get:
      tags:
        - arc transactions
      summary: Retrieve transaction details from arc
      operationId: getTransactionDetails
      parameters:
        - name: transactionId
          in: path
          description: A unique id that identifies a transaction
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Obtained transaction details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDetailsDTO'
        '401':
          description: Wrong or missing function key
        '404':
          description: Transaction details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
              example:
                error: transaction_not_found_error
                error_description: "string"
        '429':
          description: Too many Requests
        '500':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /transactions/{transactionId}/receipt:
    get:
      tags:
        - arc transactions
      summary: Retrieve transaction receipt from arc
      operationId: getTransactionReceipt
      parameters:
        - name: transactionId
          in: path
          description: A unique id that identifies a transaction
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Obtained PDF transaction receipt
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '401':
          description: Wrong or missing function key
        '404':
          description: Transaction details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
              example:
                error: receipt_not_found_error
                error_description: "string"
        '429':
          description: Too many Requests
        '500':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /payment-notices:
    get:
      tags:
        - arc payment notices
      summary: "Retrieve payment notices from arc"
      operationId: getPaymentNotices
      parameters:
        - name: dueDate
          in: query
          description: Optional date to filter paymentNotices (if provided use the format yyyy-MM-dd)
          schema:
            format: date
            type: string
            example: '2022-03-10'
        - name: size
          in: query
          description: Number of elements on one page. Default = 50
          schema:
            format: int32
            default: 50
            maximum: 100
            minimum: 1
            type: integer
        - name: page
          in: query
          description: Page number. Page value starts from 0
          schema:
            format: int32
            default: 0
            minimum: 0
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentNoticesListDTO'
        '401':
          description: "Wrong or missing function key"
        '500':
          description: "Service unavailable"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
components:
  schemas:
    TransactionsListDTO:
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/TransactionDTO'
        currentPage:
          type: integer
          format: int32
        itemsForPage:
          type: integer
          format: int32
        totalItems:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
    TransactionDTO:
      type: object
      properties:
        transactionId:
          type: string
        payeeName:
          type: string
        payeeTaxCode:
          type: string
        amount:
          type: integer
          format: int64
        transactionDate:
          type: string
          format: date-time
          example: '2024-05-31T13:07:25Z'
        isCart:
          type: boolean
        paidByMe:
          type: boolean
        registeredToMe:
          type: boolean
    TransactionDetailsDTO:
      type: object
      properties:
        infoTransaction:
          $ref: '#/components/schemas/InfoTransactionDTO'
        carts:
          type: array
          items:
            $ref: '#/components/schemas/CartItemDTO'
    InfoTransactionDTO:
      type: object
      properties:
        transactionId:
          type: string
        authCode:
          type: string
        rrn:
          type: string
        transactionDate:
          type: string
          format: date-time
          example: '2024-05-31T13:07:25Z'
        pspName:
          type: string
        walletInfo:
          $ref: '#/components/schemas/WalletInfoDTO'
        paymentMethod:
          type: string
          enum:
            - BBT
            - BP
            - AD
            - CP
            - PO
            - OBEP
            - JIF
            - MYBK
            - PPAL
            - UNKNOWN
        payer:
          $ref: '#/components/schemas/UserDetailDTO'
        amount:
          type: integer
          format: int64
        fee:
          type: integer
          format: int64
        origin:
          type: string
          enum:
            - INTERNAL
            - PM
            - NDP001PROD
            - NDP002PROD
            - NDP003PROD
            - UNKNOWN
    CartItemDTO:
      type: object
      properties:
        subject:
          type: string
        amount:
          type: integer
          format: int64
        payee:
          $ref: '#/components/schemas/UserDetailDTO'
        debtor:
          $ref: '#/components/schemas/UserDetailDTO'
        refNumberValue:
          type: string
        refNumberType:
          type: string
    UserDetailDTO:
      type: object
      properties:
        name:
          type: string
        taxCode:
          type: string
    WalletInfoDTO:
      type: object
      properties:
        accountHolder:
          type: string
        brand:
          type: string
        blurredNumber:
          type: string
        maskedEmail:
          type: string
    PaymentNoticesListDTO:
      type: object
      properties:
        paymentNotices:
          type: array
          items:
            $ref: '#/components/schemas/PaymentNoticeDTO'
          x-field-extra-annotation: "@lombok.Builder.Default"
    PaymentNoticeDTO:
      required:
        - iupd
        - debtorTaxCode
        - debtorFullName
        - debtorType
        - paTaxCode
        - paFullName
        - insertedDate
        - publishDate
        - validityDate
        - status
        - lastUpdateDate
        - paymentOptions
      type: object
      properties:
        iupd:
          description: Unique ID of the Debt Position (for positions originating from ACA the IUPD starts with ACA_)
          type: string
        debtorTaxCode:
          description: Tax code of the person to whom the Debt Position is registered
          type: string
        debtorFullName:
          description: Full name of the person to whom the Debt Position is registered
          type: string
        debtorType:
          description: Type of subject to whom the Debt Position is registered (Will be F (Physical) or G(Legal))
          type: string
        paTaxCode:
          description: Tax code of the Creditor Body
          type: string
        paFullName:
          description: Company name of the Creditor Body
          type: string
        insertedDate:
          allOf:
            - $ref: '#/components/schemas/LocalDateTime'
            - description: Date of entry of the Debt Position
        publishDate:
          allOf:
            - $ref: '#/components/schemas/LocalDateTime'
            - description: Date of publication of the Debt Position. In the case of Positions created by ACA it corresponds to the insertion date.
        validityDate:
          allOf:
            - $ref: '#/components/schemas/LocalDateTime'
            - description: Start date of validity of the Debt Position. if set to null it goes directly to valid when publishing
        status:
          allOf:
            - $ref: '#/components/schemas/PaymentNoticeStatus'
            - description: |-
                State of the Debt Position. Will be
                VALID
                 or
                PARTIALLY_PAID
        lastUpdateDate:
          allOf:
            - $ref: '#/components/schemas/LocalDate'
            - description: Date of update of the Debt Position
        paymentOptions:
          description: Array structure containing any payment options (there always exists at least 1)
          type: array
          items:
            $ref: '#/components/schemas/PaymentOptionDTO'
          x-field-extra-annotation: "@lombok.Builder.Default"
    LocalDate:
      format: date
      type: string
      example: '2022-03-10'
    LocalDateTime:
      format: date-time
      type: string
      example: '2022-03-10T12:15:50'
    PaymentNoticeStatus:
      enum:
        - VALID
        - PARTIALLY_PAID
      type: string
    PaymentOptionDTO:
      required:
        - numberOfInstallments
        - switchToExpired
        - installments
      type: object
      properties:
        description:
          description: Description of the payment option
          type: string
        numberOfInstallments:
          format: int32
          description: Number of installments that make up the payment option, if equal to 1 it is a single payment
          type: integer
        amount:
          format: int64
          description: total amount for the payment option
          type: integer
        dueDate:
          allOf:
            - $ref: '#/components/schemas/LocalDateTime'
            - description: Is the date by which the Payment option is payable.
        isPartialPayment:
          description: Indicates whether the OP is part of an installment plan
          type: boolean
        switchToExpired:
          description: Indicates, if set to true, in the case of PD created on GPD, that once the expiration date (dueDate ) has passed the PD is automatically set to the expired status
          type: boolean
        installments:
          description: Array structure containing the installments that make up the payment option (there always exists at least 1)
          type: array
          items:
            $ref: '#/components/schemas/InstallmentDTO'
          x-field-extra-annotation: "@lombok.Builder.Default"
    InstallmentDTO:
      required:
        - nav
        - iuv
        - paTaxCode
        - paFullName
        - amount
        - description
        - dueDate
        - insertedDate
        - status
        - lastUpdatedDate
      type: object
      properties:
        nav:
          description: Notice Code
          type: string
        iuv:
          description: Unique identifier
          type: string
        paTaxCode:
          description: Tax code of the Creditor Body
          type: string
        paFullName:
          description: Company name of the Creditor Body
          type: string
        amount:
          format: int64
          description: Payment Option Amount
          type: integer
        description:
          description: Description of the OP (e.g. "SISA - 741T, 942T - Checks without authorization or funding")
          type: string
        dueDate:
          allOf:
            - $ref: '#/components/schemas/LocalDateTime'
            - description: Is the date by which (TO) the Payment option is payable.
        retentionDate:
          allOf:
            - $ref: '#/components/schemas/LocalDateTime'
            - description: Not currently used in any logic. The purpose of this date will be to give the possibility to specify a time period after the dueDate within which a payment option, even if expired, will still be payable.
        insertedDate:
          allOf:
            - $ref: '#/components/schemas/LocalDateTime'
            - description: date of insertion of the OP
        notificationFee:
          format: int64
          description: corresponds to the SEND notification costs
          type: integer
        status:
          allOf:
            - $ref: '#/components/schemas/PaymentOptionStatus'
            - description: Status of the OP
        lastUpdatedDate:
          allOf:
            - $ref: '#/components/schemas/LocalDateTime'
            - description: OP update date
    PaymentOptionStatus:
      enum:
        - PO_UNPAID
        - PO_PAID
        - PO_PARTIALLY_REPORTED
        - PO_REPORTED
      type: string
    ErrorDTO:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          enum:
            - generic_error
            - transaction_not_found_error
            - receipt_not_found_error
            - invalid_amount
            - invalid_date
            - invalid_request
        error_description:
          type: string
          x-field-extra-annotation: '@com.fasterxml.jackson.annotation.JsonProperty("error_description")'
